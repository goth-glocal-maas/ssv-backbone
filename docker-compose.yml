version: "3"
services:
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.4
    # Enables the web UI and tells Traefik to listen to docker
    command:
      - --api
      - --providers.docker
      - --providers.docker.exposedbydefault=false
    ports:
      # The HTTP port
      - "80:80"
      - "443:443"
      - "25432:25432"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik/traefik.toml:/etc/traefik/traefik.toml
      - ./traefik/dynamic:/traefik-conf
      - ./acme:/etc/traefik/acme
    networks:
      - proxy_default

  supplements:
    build: ./supplements
    environment:
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
      DATABASE_URL: ${DATABASE_URL}
    expose:
      - 8080
    volumes:
      - ./public/media:/root/app/media
    environment:
      DATABASE_URL: ${DATABASE_URL}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
      MEDIA_DIR: ${UPLOAD_DIR}
    networks:
      - proxy_default
    labels:
      - traefik.http.middlewares.compressor.compress=true

  redis:
    image: redis:alpine
    networks:
      - proxy_default
    expose:
      - 6379
    labels:
      - traefik.tcp.routers.redis

  graphql:
    container_name: graphql
    image: hasura/graphql-engine:v1.3.3
    restart: always
    environment:
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: anonymous
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_ADMIN_SECRET}
      HASURA_GRAPHQL_JWT_SECRET: ${ENCRYPTION_KEY}
      HASURA_GRAPHQL_DATABASE_URL: ${DATABASE_URL}
      HASURA_GRAPHQL_EXPERIMENTAL_FEATURES: "inherited_roles"
    networks:
      - proxy_default
    expose:
      - 8080
    labels:
      - traefik.http.middlewares.compressor.compress=true

  db:
    container_name: postgis
    image: mdillon/postgis:11-alpine
    restart: always
    environment:
      POSTGRES_USER: sipp11
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_INITDB_ARGS: --data-checksums
      POSTGRES_USER: sipp11
    volumes:
      - goth-data:/var/lib/postgresql/data
    networks:
      - proxy_default
    expose:
      - 5432
    command: postgres -c 'max_connections=300'
    labels:
      - traefik.tcp.routers.psql.entrypoints=postgresql


volumes:
  goth-data:

networks:
  proxy_default:
    external: true
